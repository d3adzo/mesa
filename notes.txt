C2: Python
    -translate teamserver command into API (shorthand) for command read and execution via NTP message - python
    -Valid NTP from elsewhere - python


Transport: Python Scapy
    -NTP UDP 123
    -Send API via <something> (refid maybe) - python scapy
    -NTP commands sent first, then valid NTP traffic sent


Agent: Nim
    -Windows for now
    -somehow access the NTP information
    -translate shorthand into commands
    -compiled executable
    -beaconing via NTP response traffic, some certain config in packet
    -is there some sort of validation from server side(like an ack)
    -1 way (no output) for now


Teamserver: Python
    -oversees the other C2s
    -communication interfaces
    -Display for beaconing hosts - python (text color red/green)
    
    -connect to all DBs for command output?




Future: 
    linux Client
    c2 -DB for command output? - postgres?
    transport -encryption of some kind?
    client windows , hopefully hidden via injection/hooking
    client windows -terminate monitoring software, or possibly just sleep beacons
    client windows -change permissioning accordingly
    client windows -if beaconing is being blocked, firewall rule?
    client windows -output is written to somewhere and then translated+transported back through NTP response traffic
